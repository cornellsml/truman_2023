Update File: [('views/partials/actorPost.pug', '[CONTENT]\n{\n  "Updated File Content": "[CONTENT]
{
  "Updated File Content": ".ui.fluid.card.dim(postClass=val.class, postID=val.id, type='actor', actor_un = val.actor.username, actor_name = val.actor.profile.name, actor_pic = val.actor.profile.picture)\n//- dimmer DIV for flagging\n.ui.dimmer.flag\n  .content\n    .center\n      h2.ui.inverted.icon.header\n        i.red.flag.icon\n        |  You've flagged this!\n        h3.ui.inverted.header\n          span=\"The admins will review this post further. We are sorry you had this experience.\"\n.content\n  .right.floated.time.meta= (user.createdAt.getTime() + val.time)\n  a(href='/user/'+val.actor.username)     \n    img.ui.avatar.image(src='/public/picture.svg', data-src=cdn+\"/profile_pictures/\"+val.actor.profile.picture)\n    span=val.actor.profile.name\n.img.post.image\n  img(src='/public/picture.svg', data-src=cdn+\"/post_pictures/\"+val.picture, style=\"max-width:100%; width:100%;\")\n.content\n  .description=val.body\n  .myTimer.hidden 0\n.ui.bottom.three.attached.icon.buttons\n  .ui.reply.button(tabindex='0')\n    i.reply.icon\n    |  Reply\n  .ui.flag.button(tabindex='0')\n    i.flag.icon\n    |  Flag\n  .ui.labeled.button(tabindex='0')\n    .ui.like.button(class=val.like? \"red\": null)\n      i.heart.icon\n      |  Like\n    a.ui.basic.red.left.pointing.label.count=val.likes\nif val.comments.length > 0\n  .content\n    .ui.comments\n      each comment in val.comments\n        //- Comment is user-made\n        if comment.new_comment\n          .comment(commentID=comment.commentID)\n            a.avatar.image(href='/me')\n              if user.profile.picture\n                img(src='/user_avatar/'+user.profile.picture)\n              else\n                img(src=user.gravatar(60))\n            .content\n              a.author(href='/me')=user.profile.name || user.username || user.id\n              .metadata\n                span.date=(user.createdAt.getTime() + comment.time)\n                .rating\n                  i.heart.icon(class=comment.liked ? \"red\" : null)\n                  span.num=comment.likes+(comment.liked ? 1 : 0)\n                  |  Likes\n              .text=comment.body\n              .actions\n                a.like.comment(class=comment.liked ? \"red\" : null ) !{comment.liked ? \"Unlike\" : \"Like\"}\n        //- Else this is a normal comment from the script\n        else\n          .comment(commentID=comment.id)\n            a.avatar(href='/user/'+comment.actor.username)                     \n              img(src='/public/picture.svg', data-src=cdn+\"/profile_pictures/\"+comment.actor.profile.picture)\n            .content\n              a.author(href='/user/'+comment.actor.username)=comment.actor.profile.name\n              .metadata\n                span.date=(user.createdAt.getTime() + comment.time)\n                .rating\n                  i.heart.icon(class=comment.liked ? \"red\" : null)\n                  span.num=comment.likes+(comment.liked ? 1 : 0)\n                  |  Likes\n              .text=comment.body\n              .actions\n                a.like.comment(class=comment.liked ? \"red\" : null ) !{comment.liked ? \"Unlike\" : \"Like\"}\n                a.flag.comment Flag\n| How is #{val.actor.profile.name} feeling?\n.extra.content\n  .ui.fluid.left.labeled.right.icon.input\n    .ui.label\n      if user.profile.picture\n        img.ui.avatar.image.small(src='/user_avatar/'+user.profile.picture, name=user.profile.name || user.username || user.id)\n      else\n        img.ui.avatar.image.small(src=user.gravatar(60), name=user.profile.name || user.username || user.id)            \n    .ui.form\n      .field \n        textarea.newcomment(type='text', placeholder='Write a Comment' rows='1')\n    i.big.send.link.icon\n"
}
[/CONTENT]"\n}\n[/CONTENT]')]
Update File: [('public/css/script.css', '[CONTENT]\n{\n  "Updated File Content": "[CONTENT]
{
  "Updated File Content": "#content.hidden {\n    display: none;\n}\n\n\n/* CSS for Actor and User Posts */\n\n.ui[class*=\"bottom attached\"].buttons .button:first-child {\n    border-radius: 0 !important;\n}\n\n.ui[class*=\"bottom attached\"].buttons .ui.label {\n    border-radius: 0 !important;\n}\n\n.ui.comments .comment .text {\n    margin: 0.25em 0;\n}\n\n\n/* CSS for adding new post */\n\n.ui.label>img {\n    width: 2.1666em!important;\n}\n\n\n/* CSS for adding new comment on post */\n\n.extra.content>.ui.fluid.left.labeled.right.icon.input>.ui.form {\n    width: 100%;\n}\n\ntextarea.newcomment {\n    border-radius: 0 .28571429rem .28571429rem 0;\n}\n\n.extra.content>.ui.fluid.left.labeled.right.icon.input>.ui.label {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0.5em;\n}\n\n.extra.content>.ui.fluid.left.labeled.right.icon.input>.ui.label>img {\n    margin: 0;\n    width: 2em!important;\n}\n\n.extra.content>.ui.fluid.left.labeled.right.icon.input>i.big.send.link.icon {\n    margin-right: 4px;\n}\n\n\n/* CSS for reporting and blocking modals */\n\n.modal .ui.form label {\n    font-size: medium !important;\n}\n\n.modal .ui.form .grouped.fields .field {\n    margin-left: 5px !important;\n}\n\n\n/* CSS for feeling-prompt */\n\n.feeling-prompt {\n    background-color: #f0f0f0;\n    font-family: Arial, sans-serif;\n    font-size: 14px;\n    pointer-events: none;\n}"
}
[/CONTENT]"\n}\n[/CONTENT]')]