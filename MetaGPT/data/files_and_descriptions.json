[{"file_name": "config/passport.js", "description": "Passport Local and OAuth strategies, plus login middleware. Handles login authentication of email and passwords."}, {"file_name": "controllers/actors.js", "description": "Controller for actors."}, {"file_name": "controllers/helpers.js", "description": "Helper Controller methods."}, {"file_name": "controllers/notification.js", "description": "Controller for platform notifications."}, {"file_name": "controllers/script.js", "description": "Controller for feed and user behavior."}, {"file_name": "controllers/user.js", "description": "Controller for user."}, {"file_name": "models/Actor.js", "description": "Mongoose schema and model for Actor."}, {"file_name": "models/Notification.js", "description": "Mongoose schema and model for Notification."}, {"file_name": "models/Script.js", "description": "Mongoose schema and model for Script."}, {"file_name": "models/User.js", "description": "Mongoose schema and model for User."}, {"file_name": "input/actors.csv", "description": "csv file defining the simulation actors (see here)"}, {"file_name": "input/notification(read,like).csv", "description": "csv file defining the simulation notifications (see here)"}, {"file_name": "input/notification(reply).csv", "description": "csv file defining the simulation notifications (see here)"}, {"file_name": "input/posts.csv", "description": "csv file defining the simulation posts (see here)"}, {"file_name": "input/replies.csv", "description": "csv file defining the simulation comments on the posts (see here)"}, {"file_name": "post_pictures", "description": "Directory containing all the files of the post photos"}, {"file_name": "profile_pictures", "description": "Directory containing all the files of the actor profile photos"}, {"file_name": "public/", "description": "Static assets (fonts, css, js, img)."}, {"file_name": "public/css/notification.css", "description": "Main stylesheet for notifications."}, {"file_name": "public/css/script.css", "description": "Main stylesheet for the social media timeline / feed (ex:posts). "}, {"file_name": "public/css/ui_layout.css", "description": "Main stylesheet for the app."}, {"file_name": "public/js/actor.js", "description": "Client-side JavaScript for actor profile pages."}, {"file_name": "public/js/main.js", "description": "Client-side JavaScript for the app."}, {"file_name": "public/js/notification.js", "description": "Client-side JavaScript specific to the notification components and functionalities."}, {"file_name": "public/js/postFunctionalities.js", "description": "Client-side JavaScript specific to post interactions (ex: liking/disliking and flagging posts and comments, adding comments) focusing on user interaction and dynamic content updates. The script also sets up various event listeners and interactions for the UI elements like the reply button, send icon, like button, flag button, and follow button, ensuring that the appropriate functions are called when these elements are interacted with."}, {"file_name": "public/js/profile.js", "description": "Client-side JavaScript for profile forms (on _Sign Up_ and _Update Your Profile_ pages)"}, {"file_name": "public/js/script.js", "description": "Client-side JavaScript for feed/timeline"}, {"file_name": "views/account", "description": "Folder containing the templates to pages related to a user's/participant's account"}, {"file_name": "views/account/forgot.pug", "description": "Template for _Forgot your Password_ page"}, {"file_name": "views/account/login.pug", "description": "Template for _Login_ page"}, {"file_name": "views/account/profile.pug", "description": "Template for user's _Update My Profile_ page"}, {"file_name": "views/account/signup_info.pug", "description": "Template for _Tell Us a Little More About Yourself_ page, shown initially upon user's sign up"}, {"file_name": "views/account/signup.pug", "description": "Template for _Sign_ _Up_ page"}, {"file_name": "views/partials", "description": "Folder containing the templates of partial components. These components are not complete pages, but rather components of the interface that appear in multiple places or repeatedly. Defining the components in one file and then including it with the code \"include <filename>\" when needed reduces code redundancy and maintains consistency across components."}, {"file_name": "views/partials/actorPost.pug", "description": "Partial template for an actor post"}, {"file_name": "views/partials/ui_flash.pug", "description": "Partial template for error, info and success flash notifications."}, {"file_name": "views/partials/ui_header.pug", "description": "Partial template for header (navigation bar)"}, {"file_name": "views/partials/userCard.pug", "description": "Partial template for user card (displayed on timeline and displayed on user's _Profile_ page)"}, {"file_name": "views/partials/userPost.pug", "description": "Partial template for a user's post"}, {"file_name": "views/actor.pug", "description": "Template for an actor's Profile"}, {"file_name": "views/actors.pug", "description": "Template for the _Actor Directory_ page. Only accessible to admin users."}, {"file_name": "views/com.pug", "description": "Template for the _Community Rules_ page."}, {"file_name": "views/completed.pug", "description": "Template for the _Completed_ page."}, {"file_name": "views/error.pug", "description": "Template for the _Error_ page."}, {"file_name": "views/info.pug", "description": "Template for the _Welcome to EatSnap.Love!_ page"}, {"file_name": "views/me.pug", "description": "Template for the _Welcome to EatSnap.Love!_ page"}, {"file_name": "views/notification.pug", "description": "Template for the _Notifications_ page"}, {"file_name": "views/script.pug", "description": "Template for the _Timeline/Feed_ page"}, {"file_name": "views/test.pug", "description": "Template for the _Test Timeline/Feed_ page (same as above). Can be used for testing purposes."}, {"file_name": "views/tos.pug", "description": "Template for the _Terms of Services_ page"}, {"file_name": "views/ui_layout.pug", "description": "Base template. All templates extends (or are based off of) this template."}, {"file_name": ".dockerignore", "description": "Folder and files ignored by docker usage."}, {"file_name": ".env.example", "description": "Example template of .env file (to be copied and Your API keys, tokens, passwords and database URI."}, {"file_name": ".env", "description": "Environment variables file, where database URI, and other simulation components are defined."}, {"file_name": ".gitignore", "description": "Folder and files ignored by git."}, {"file_name": "app.js", "description": "The main application file."}, {"file_name": "data-export.js", "description": "JavaScript file that exports basic user information for each user on the site, into a readable csv file."}, {"file_name": "docker-compose.yml", "description": "Docker compose configuration file."}, {"file_name": "Dockerfile", "description": "Docker configuration file."}, {"file_name": "package.json", "description": "NPM dependencies."}, {"file_name": "package-lock.json", "description": "Contains exact versions of NPM dependencies in package.json."}, {"file_name": "populate.js", "description": "JavaScript file that populates the database with the csv files in the /input folder."}]